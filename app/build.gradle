apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'jacoco-android'
apply plugin: 'spoon'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.mirhoseini.marvel"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true

        dataBinding {
            enabled = true
        }

        /* replaced with custom MockTestRunner */
        // testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.mirhoseini.marvel.MarvelTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'

            // Run code coverage reports by default on debug builds.
            testCoverageEnabled true
        }
    }

    productFlavors {
        prod {
        }

        mock {
        }
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
    }

    /* allow using java 8 lambda */
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    /* fixes espresso conflict with supportAnnotation and androidSupport new versions */
    configurations.all {
        resolutionStrategy {
            force rootProject.ext.testLibraries.supportAnnotations
            force rootProject.ext.libraries.androidSupport
            force rootProject.ext.libraries.appCompat
            force rootProject.ext.libraries.designSupport
            force rootProject.ext.libraries.recyclerView
        }
    }
}

// Grant animation permissions to avoid test failure because of ui sync.
task grantAnimationPermissions(type: Exec, dependsOn: 'installMock') {
    group = 'test'
    description = 'Grant permissions for testing.'

    def absolutePath = file('..') // Get project absolute path
    commandLine "$absolutePath/set_animation_permissions.sh com.mirhoseini.marvel".split(" ")
}

// Source: http://stackoverflow.com/q/29908110/112705
afterEvaluate {
    tasks.each { task ->
        if (task.name.startsWith('assembleMockAndroidTest')) {
            task.dependsOn grantAnimationPermissions
        }
    }
}

jacocoAndroidUnitTestReport {
    // fix jacoco issue with ButterKnife
    excludes += ['**/*$ViewBinder*.*']
}

spoon {
//    codeCoverage = true
}

retrolambda {
//    jdk System.getenv("JAVA_HOME")
    oldJdk System.getenv("JAVA7_HOME")
    javaVersion JavaVersion.VERSION_1_7
    defaultMethods false
    incremental true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':marvel-core')

    testCompile rootProject.ext.testLibraries.junit
    testCompile rootProject.ext.testLibraries.robolectric
    testCompile rootProject.ext.testLibraries.mockitoCore

    androidTestCompile rootProject.ext.testLibraries.mockitoAndroid
    androidTestCompile rootProject.ext.testLibraries.supportTestRunner
    androidTestCompile rootProject.ext.testLibraries.supportAnnotations
    androidTestCompile rootProject.ext.testLibraries.espresso
    androidTestCompile rootProject.ext.testLibraries.espressoContrib
    androidTestCompile rootProject.ext.testLibraries.spoon

    compile rootProject.ext.libraries.appCompat
    compile rootProject.ext.libraries.androidSupport
    compile rootProject.ext.libraries.designSupport
    compile rootProject.ext.libraries.vectorSupport
    compile rootProject.ext.libraries.recyclerView
    compile rootProject.ext.libraries.cardView
    compile rootProject.ext.libraries.palette

    compile rootProject.ext.libraries.rxandroid
    compile rootProject.ext.libraries.rxbinding

    compile rootProject.ext.libraries.utils

    compile rootProject.ext.libraries.picasso

    compile rootProject.ext.libraries.butterknife
    annotationProcessor rootProject.ext.aptLibraries.butterknifeCompiler

    compile rootProject.ext.libraries.dagger
    annotationProcessor rootProject.ext.aptLibraries.daggerCompiler
    androidTestAnnotationProcessor rootProject.ext.aptLibraries.daggerCompiler

    compile rootProject.ext.libraries.timber

    compile rootProject.ext.libraries.ormLite

    compile rootProject.ext.libraries.firebaseCore
    compile rootProject.ext.libraries.firebaseCrash
}

apply plugin: 'com.google.gms.google-services'